name: Reusable Deploy Staging (ECS + Terraform)

on:
  workflow_call:
    secrets:
      AWS_ACCOUNT_ID:
        required: true
    inputs:
      AWS_REGION: { required: true, type: string }
      ECR_REPO_FE: { required: true, type: string }
      ECR_REPO_BE: { required: true, type: string }
      GH_OWNER:   { required: false, type: string }
      GH_REPO:    { required: false, type: string }

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ inputs.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ROLE_TO_ASSUME: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/staging-github-oidc
      FE_REPO: ${{ inputs.ECR_REPO_FE }}
      BE_REPO: ${{ inputs.ECR_REPO_BE }}
      FE_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR_REPO_FE }}
      FE_NGINX_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR_REPO_FE }}-nginx
      BE_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR_REPO_BE }}
      TF_VAR_gh_owner: ${{ inputs.GH_OWNER }}
      TF_VAR_gh_repo:  ${{ inputs.GH_REPO }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
      - name: Terraform Init/Apply
        working-directory: ./infrastructure
        run: |
          terraform -version
          terraform init -input=false
          terraform apply -auto-approve -input=false
      - uses: aws-actions/amazon-ecr-login@v2
      - name: Ensure ECR repositories exist
        shell: bash
        run: |
          set -euo pipefail
          for r in "${FE_REPO}" "${BE_REPO}" "${FE_REPO}-nginx"; do
            aws ecr describe-repositories --repository-names "$r" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "$r" >/dev/null
          done
      - name: Build & Push Frontend
        working-directory: ./frontend
        run: |
          docker build -t "$FE_IMAGE:latest" .
          docker push "$FE_IMAGE:latest"
      - name: Build & Push Frontend Nginx Auth Sidecar
        working-directory: ./frontend
        run: |
          docker build -t "$FE_NGINX_IMAGE:latest" -f Dockerfile.nginx .
          docker push "$FE_NGINX_IMAGE:latest"
      - name: Build & Push Backend
        working-directory: ./backend
        run: |
          docker build -t "$BE_IMAGE:latest" .
          docker push "$BE_IMAGE:latest"
      - name: Terraform Apply (roll services to latest)
        working-directory: ./infrastructure
        run: |
          terraform apply -auto-approve -input=false
